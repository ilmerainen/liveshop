name: CI

on:
  push:
    branches: [dev]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Image version'
        required: true
env:
  REGISTRY: 'registry.digitalocean.com/livechat'
  IMAGE_NAME: 'livechat'
  DROPLET_NAME: ${{ secrets.DROPLET_NAME }}
  DATABASE_TYPE: 'postgres'
  DATABASE_HOST: 'localhost'
  DATABASE_PORT: 5432
  DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
  DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
  DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
  DATABASE_SYNCHRONIZE: false
  DATABASE_MAX_CONNECTIONS: 100
  DATABASE_SSL_ENABLED: false
  DATABASE_REJECT_UNAUTHORIZED: false
  NODE_ENV: 'development'
  APP_PORT: 3001
  APP_NAME: 'NestJS API'
  API_PREFIX: 'api'
  APP_FALLBACK_LANGUAGE: 'en'
  APP_HEADER_LANGUAGE: 'x-custom-lang'
  FRONTEND_DOMAIN: 'http://localhost:3000'
  BACKEND_DOMAIN: 'http://0.0.0.0:3001'
jobs:
  deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Remove all files from target directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            rm -rf /root/livechat/*

      - name: Copy files to droplet
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: root
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          source: '.'
          target: /root/livechat

      - name: Deploy Docker Compose file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          envs: DATABASE_TYPE,DATABASE_HOST,DATABASE_PORT,DATABASE_USERNAME,DATABASE_PASSWORD,DATABASE_NAME,DATABASE_SYNCHRONIZE,DATABASE_MAX_CONNECTIONS,DATABASE_SSL_ENABLED,DATABASE_REJECT_UNAUTHORIZED,NODE_ENV,APP_PORT,APP_NAME,API_PREFIX,APP_FALLBACK_LANGUAGE,APP_HEADER_LANGUAGE,FRONTEND_DOMAIN,BACKEND_DOMAIN
          script: |
            export NODE_ENV=development \
            && export APP_PORT=3001 \
            && export APP_NAME="NestJS API" \
            && export API_PREFIX=api \
            && export APP_FALLBACK_LANGUAGE=en \
            && export APP_HEADER_LANGUAGE=x-custom-lang \
            && export FRONTEND_DOMAIN=http://localhost:3000 \
            && export BACKEND_DOMAIN=http://0.0.0.0:3000 \
            && export DATABASE_TYPE=postgres \
            && export DATABASE_HOST=postgres \
            && export DATABASE_PORT=5432 \
            && export DATABASE_USERNAME=root \
            && export DATABASE_PASSWORD=secret \
            && export DATABASE_NAME=api \
            && export DATABASE_SYNCHRONIZE=false \
            && export DATABASE_MAX_CONNECTIONS=100 \
            && export DATABASE_SSL_ENABLED=false \
            && export DATABASE_REJECT_UNAUTHORIZED=false && \
            docker-compose -f /root/livechat/docker-compose.ci.yaml build --no-cache && \
            docker-compose -f /root/livechat/docker-compose.ci.yaml up -d
